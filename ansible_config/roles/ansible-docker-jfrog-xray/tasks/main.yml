---
# tasks file for docker-jfrog-xray

# Must run the export before the docker-compose is changed.
- name: run the postgres export
  include_tasks: postgresql_export.yml
  when: docker_jfrog_xray_postgresql_migrate | bool

- name: set the file handle allocation limits
  become: yes
  # https://www.jfrog.com/confluence/display/JFROG/System+Requirements?utm_source=platform&utm_content=installer#SystemRequirements-Xray-FileHandleAllocationLimit
  ansible.builtin.lineinfile:
    path: "/etc/security/limits.conf"
    line: "{{ item.user }} {{ item.type }} nofile 100000"
    insertafter: EOF
  loop:
    - { user: 'root', type: 'hard' }
    - { user: 'root', type: 'soft' }
    - { user: 'xray', type: 'hard' }
    - { user: 'xray', type: 'soft' }
    - { user: 'postgres', type: 'hard' }
    - { user: 'postgres', type: 'soft' }

- name: create the docker_compose folder
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_docker_compose_folder }}"
    state: directory
    mode: 0700
    recurse: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: create a temp folder for the download
  ansible.builtin.tempfile:
    state: directory
  register: docker_jfrog_xray_temp_download_dir

- name: download and extract the docker-compose package
  ansible.builtin.unarchive:
    src: "{{ docker_jfrog_xray_download_host }}/artifactory/jfrog-xray/xray-compose/{{ docker_jfrog_xray_version }}/jfrog-xray-{{ docker_jfrog_xray_version }}-compose.tar.gz"
    dest: "{{ docker_jfrog_xray_temp_download_dir.path }}"
    remote_src: yes

- name: put the package files in the right folder
  ansible.builtin.copy:
    src: "{{ docker_jfrog_xray_temp_download_dir.path }}/jfrog-xray-{{ docker_jfrog_xray_version }}-compose/"
    dest: "{{ docker_jfrog_xray_docker_compose_folder }}/"
    remote_src: yes

- name: remove the temp folder for the download
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_temp_download_dir.path }}"
    state: absent

- name: copy the docker-compose files
  ansible.builtin.copy:
    src: "{{ docker_jfrog_xray_docker_compose_folder }}/{{ item }}"
    dest: "{{ docker_jfrog_xray_docker_compose_folder }}/"
    remote_src: yes
  loop:
    - templates/docker-compose.yaml
    - templates/docker-compose-postgres.yaml
    - templates/docker-compose-rabbitmq.yaml

- name: add tasks to modify the .env file
  include_tasks: modify_env.yml

- name: create the application folders for xray
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_data_dir }}/{{ item }}"
    state: directory
    mode: 0750
    owner: "{{ docker_jfrog_xray_user }}"
    group: "{{ docker_jfrog_xray_user }}"
  with_items:
    - var/data
    - var/etc
    - var/certs

- name: create the application folder for postgres
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_postgres_data_dir }}"
    state: directory
    mode: 0700
    owner: "999"
    group: "999"

- name: locally copy certificates to trust 1
  become: yes
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ docker_jfrog_xray_data_dir }}/var/certs"
    remote_src: "{{ item.remote_src }}"
    mode: 0744
    owner: "{{ docker_jfrog_xray_user }}"
    group: "{{ docker_jfrog_xray_user }}"
  loop: "{{ docker_jfrog_xray_certs_to_trust }}"
  when: docker_jfrog_xray_certs_to_trust is defined

- name: create the certs folder
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_data_dir }}/var/etc/security/keys/trusted"
    state: directory
    mode: 0755
    owner: "{{ docker_jfrog_xray_user }}"
    group: "{{ docker_jfrog_xray_user }}"
  when: docker_jfrog_xray_certs_to_trust is defined

- name: locally copy certificates to trust 2
  become: yes
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ docker_jfrog_xray_data_dir }}/var/etc/security/keys/trusted"
    remote_src: "{{ item.remote_src }}"
    mode: 0744
    owner: "{{ docker_jfrog_xray_user }}"
    group: "{{ docker_jfrog_xray_user }}"
  loop: "{{ docker_jfrog_xray_certs_to_trust }}"
  when: docker_jfrog_xray_certs_to_trust is defined

- name: add tasks to modify the docker-compose.yaml file
  include_tasks: modify_docker_compose.yml

- name: add tasks to modify the docker-compose-postgres.yaml file
  include_tasks: modify_docker_compose_postgres.yml

- name: add tasks to modify the system.yaml file
  include_tasks: modify_system.yml

- name: create the application folder for third-party
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_data_dir }}/app"
    state: directory
    mode: 0700
    owner: "999"
    group: "999"

- name: copy the third-party files into the application folder
  become: yes
  ansible.builtin.copy:
    src: "{{ docker_jfrog_xray_docker_compose_folder }}/third-party"
    dest: "{{ docker_jfrog_xray_data_dir }}/app"
    remote_src: yes

- name: ensure the third-party files have the right permissions
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_data_dir }}/app"
    owner: "999"
    group: "999"
    recurse: yes

- name: pull docker postgres
  ansible.builtin.shell:
    cmd: docker-compose --file docker-compose-postgres.yaml --project-name xray-postgres pull
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: pull docker rabbitmq
  ansible.builtin.shell:
    cmd: docker-compose --file docker-compose-rabbitmq.yaml --project-name xray-rabbitmq pull
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: pull docker xray
  ansible.builtin.shell:
    cmd: docker-compose --project-name xray pull
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: bring up docker postgres
  ansible.builtin.shell:
    cmd: docker-compose --file docker-compose-postgres.yaml --project-name xray-postgres up --detach
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: wait 15 seconds to ensure the container is up
  ansible.builtin.pause:
    seconds: 15

- name: run the postgres import
  include_tasks: postgresql_import.yml
  when: docker_jfrog_xray_postgresql_migrate | bool

- name: bring up docker rabbitmq
  ansible.builtin.shell:
    cmd: docker-compose --file docker-compose-rabbitmq.yaml --project-name xray-rabbitmq up --detach
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: wait 15 seconds to ensure the container is up
  ansible.builtin.pause:
    seconds: 15

- name: bring up docker xray
  ansible.builtin.shell:
    cmd: docker-compose --project-name xray up --detach
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash