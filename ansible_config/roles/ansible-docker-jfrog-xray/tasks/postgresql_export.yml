---

# https://medium.com/better-programming/how-to-upgrade-your-postgresql-version-using-docker-d1e81dbbbdf9
# https://www.postgresql.org/docs/13/upgrading.html

- name: stop the xray containers
  ansible.builtin.shell:
    cmd: docker-compose --project-name xray stop
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: stop the rabbitmq container
  ansible.builtin.shell:
    cmd: docker-compose --file docker-compose-rabbitmq.yaml --project-name xray-rabbitmq stop
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: ensure postgresql is running
  ansible.builtin.shell:
    cmd: docker-compose --file docker-compose-postgres.yaml --project-name xray-postgres up --detach
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: wait 15 seconds to ensure the container is up
  ansible.builtin.pause:
    seconds: 15

- name: ensure the dump file is not present
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_docker_compose_folder }}/dump.sql"
    state: absent

# For some reason using docker-compose exec here throws a python error.
- name: export the postgres data
  ansible.builtin.shell:
    cmd: docker exec {{ docker_jfrog_xray_postgres_container_name }} pg_dumpall -U {{ docker_jfrog_xray_postgres_user }} > dump.sql
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: stop the postgres container
  ansible.builtin.shell:
    cmd: docker-compose --file docker-compose-postgres.yaml --project-name xray-postgres stop
    chdir: "{{ docker_jfrog_xray_docker_compose_folder }}"
    executable: /bin/bash

- name: delete any backup of the mapped volume for postgresql
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_postgres_backup_dir }}"
    state: absent

- name: backup the mapped volume for postgresql
  become: yes
  ansible.builtin.copy:
    src: "{{ docker_jfrog_xray_postgres_data_dir }}"
    remote_src: yes
    dest: "{{ docker_jfrog_xray_postgres_backup_dir }}"

- name: delete the mapped volume for postgresql
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_postgres_data_dir }}"
    state: absent

- name: recreate the folder for the postgresql mapped volume
  become: yes
  file:
    path: "{{ docker_jfrog_xray_postgres_data_dir }}"
    state: directory
    mode: 0700
    owner: "999"
    group: "999"

- name: ensure the data dump file is readable
  become: yes
  ansible.builtin.file:
    path: "{{ docker_jfrog_xray_docker_compose_folder }}/dump.sql"
    mode: 0444
