---

# https://medium.com/better-programming/how-to-upgrade-your-postgresql-version-using-docker-d1e81dbbbdf9
# https://www.postgresql.org/docs/13/upgrading.html

- name: stop the artifactory and nginx containers
  become: yes
  community.general.docker_compose:
    project_name: artifactory
    project_src: "{{ docker_artifactory_docker_compose_folder }}"
    state: present
    stopped: yes
    services:
      - artifactory
      - nginx

- name: ensure postgresql is running
  become: yes
  docker_compose:
    project_name: artifactory
    project_src: "{{ docker_artifactory_docker_compose_folder }}"
    services:
      - postgresql
  register: docker_artifactory_compose_postgresql_result

- name: wait 15 seconds to ensure the postgresql container is up
  pause:
    seconds: 15

- name: ensure the dump file is not present
  become: yes
  ansible.builtin.file:
    path: "{{ docker_artifactory_docker_compose_folder }}/dump.sql"
    state: absent

- name: export the postgres data
  become: yes
  ansible.builtin.shell:
    cmd: docker exec postgresql pg_dumpall -U {{ docker_artifactory_postgres_user }} > dump.sql
    chdir: "{{ docker_artifactory_docker_compose_folder }}"
    executable: /bin/bash

- name: stop all the docker-compose containers
  become: yes
  community.general.docker_compose:
    project_name: artifactory
    project_src: "{{ docker_artifactory_docker_compose_folder }}"
    state: present
    stopped: yes

- name: delete any backup of the mapped volume for postgresql
  become: yes
  ansible.builtin.file:
    path: "{{ docker_artifactory_data }}/postgresql.bak"
    state: absent

- name: backup the mapped volume for postgresql
  become: yes
  ansible.builtin.copy:
    src: "{{ docker_artifactory_data }}/postgresql"
    remote_src: yes
    dest: "{{ docker_artifactory_data }}/postgresql.bak"

- name: delete the mapped volume for postgresql
  become: yes
  ansible.builtin.file:
    path: "{{ docker_artifactory_data }}/postgresql"
    state: absent

- name: recreate the folder for the postgresql mapped volume
  become: yes
  file:
    path: "{{ docker_artifactory_data }}/postgresql"
    state: directory
    mode: 0700

- name: ensure the data dump file is readable
  become: yes
  ansible.builtin.file:
    path: "{{ docker_artifactory_docker_compose_folder }}/dump.sql"
    mode: 0444
